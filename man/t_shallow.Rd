% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trans.R
\name{t_shallow}
\alias{t_shallow}
\title{Transpose a sparse matrix by changing its format}
\usage{
t_shallow(X)
}
\arguments{
\item{X}{A sparse matrix in CSC (`dgCMatrix` or `ngCMatrix`) or CSR (`dgRMatrix` or `ngRMatrix`) formats. If `X` is of a different type, will just invoke its generic
`t()` method.}
}
\value{
The transpose of `X` (rows become columns and columns become rows),
but in the opposite format (CSC -> CSR, CSR -> CSC).
}
\description{
Transposes a sparse matrix in CSC (a.k.a. "CsparseMatrix")
or CSR (a.k.a. "RsparseMatrix") formats by converting it to the opposite format
(i.e. CSC -> CSR, CSR -> CSC).

This implies only a shallow copy (i.e. it's faster), as the only necessary thing to make
such transpose operation is to swap the number of rows and columns and change the class
of the object (all other slots remain the same), avoiding any deep copying and
format conversion as when e.g. creating a CSC transpose of a CSC matrix.

If the input is neither a CSR not CSC matrix, it will just call the generic `t()` method.
}
\examples{
library(Matrix)
library(MatrixExtra)
set.seed(1)
X <- rsparsematrix(3, 4, .5)
inherits(X, "CsparseMatrix")
Xtrans <- t_shallow(X)
inherits(Xtrans, "RsparseMatrix")
nrow(X) == ncol(Xtrans)
ncol(X) == nrow(Xtrans)

Xorig <- t_shallow(Xtrans)
inherits(Xorig, "CsparseMatrix")
}
