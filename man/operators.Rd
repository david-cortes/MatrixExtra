% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\name{operators}
\alias{operators}
\alias{*,RsparseMatrix,sparseMatrix-method}
\alias{*,ngRMatrix,sparseMatrix-method}
\alias{*,lgRMatrix,sparseMatrix-method}
\alias{*,RsparseMatrix,matrix-method}
\alias{*,ngRMatrix,matrix-method}
\alias{*,lgRMatrix,matrix-method}
\alias{+,RsparseMatrix,sparseMatrix-method}
\alias{+,ngRMatrix,sparseMatrix-method}
\alias{+,lgRMatrix,sparseMatrix-method}
\alias{-,RsparseMatrix,sparseMatrix-method}
\alias{-,ngRMatrix,sparseMatrix-method}
\alias{-,lgRMatrix,sparseMatrix-method}
\alias{*,RsparseMatrix,integer-method}
\alias{*,RsparseMatrix,numeric-method}
\alias{*,RsparseMatrix,logical-method}
\alias{/,RsparseMatrix,integer-method}
\alias{/,RsparseMatrix,numeric-method}
\alias{/,RsparseMatrix,logical-method}
\alias{\%/\%,RsparseMatrix,integer-method}
\alias{\%/\%,RsparseMatrix,numeric-method}
\alias{\%/\%,RsparseMatrix,logical-method}
\alias{\%\%,RsparseMatrix,integer-method}
\alias{\%\%,RsparseMatrix,numeric-method}
\alias{\%\%,RsparseMatrix,logical-method}
\alias{^,RsparseMatrix,integer-method}
\alias{^,RsparseMatrix,numeric-method}
\alias{^,RsparseMatrix,logical-method}
\alias{&,RsparseMatrix,logical-method}
\alias{|,RsparseMatrix,logical-method}
\title{Mathematical operators on CSR matrices}
\usage{
\S4method{*}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{*}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{*}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,matrix}(e1, e2)

\S4method{*}{ngRMatrix,matrix}(e1, e2)

\S4method{*}{lgRMatrix,matrix}(e1, e2)

\S4method{+}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{+}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{+}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{-}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{-}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{-}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,integer}(e1, e2)

\S4method{*}{RsparseMatrix,numeric}(e1, e2)

\S4method{*}{RsparseMatrix,logical}(e1, e2)

\S4method{/}{RsparseMatrix,integer}(e1, e2)

\S4method{/}{RsparseMatrix,numeric}(e1, e2)

\S4method{/}{RsparseMatrix,logical}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,logical}(e1, e2)

\S4method{\%\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%\%}{RsparseMatrix,logical}(e1, e2)

\S4method{^}{RsparseMatrix,integer}(e1, e2)

\S4method{^}{RsparseMatrix,numeric}(e1, e2)

\S4method{^}{RsparseMatrix,logical}(e1, e2)

\S4method{&}{RsparseMatrix,logical}(e1, e2)

\S4method{|}{RsparseMatrix,logical}(e1, e2)
}
\arguments{
\item{e1}{A CSR matrix.}

\item{e2}{Right-hand side of the operation. Either a CSR matrix or a scalar
depending on the specific operation. If the RHS is not covered by the functions
in this package, will default to the operators from `Matrix` (e.g. when the
RHS is a vector)}
}
\value{
A CSR matrix of class `dgRMatrix` (`lgRMatrix` for some of the logical
operators).
}
\description{
Implements some mathematical operators between CSR matrices
(a.k.a. RsparseMatrix) such as addition and multiplication,
 and between CSR matrices and numeric constants, such as division and multiplication.
}
\details{
The indices of the matrices might be sorted in-place for some operations
(see \link{sort_sparse_indices}).
}
\examples{
library(Matrix)
library(MatrixExtra)
set.seed(1)
X <- as.csr.matrix(rsparsematrix(4, 3, .5))
X + X
X * 2
X ^ 2
### here the result will be CSC
X ^ c(1,2)
}
