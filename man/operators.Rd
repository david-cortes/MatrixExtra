% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\name{operators}
\alias{operators}
\alias{*,RsparseMatrix,sparseMatrix-method}
\alias{*,ngRMatrix,sparseMatrix-method}
\alias{*,lgRMatrix,sparseMatrix-method}
\alias{*,sparseMatrix,RsparseMatrix-method}
\alias{*,sparseMatrix,ngRMatrix-method}
\alias{*,sparseMatrix,lgRMatrix-method}
\alias{*,CsparseMatrix,TsparseMatrix-method}
\alias{*,TsparseMatrix,CsparseMatrix-method}
\alias{*,RsparseMatrix,matrix-method}
\alias{*,ngRMatrix,matrix-method}
\alias{*,lgRMatrix,matrix-method}
\alias{*,matrix,RsparseMatrix-method}
\alias{*,matrix,ngRMatrix-method}
\alias{*,matrix,lgRMatrix-method}
\alias{*,TsparseMatrix,matrix-method}
\alias{*,TsparseMatrix,float32-method}
\alias{*,ngTMatrix,matrix-method}
\alias{*,lgTMatrix,matrix-method}
\alias{*,matrix,TsparseMatrix-method}
\alias{*,float32,TsparseMatrix-method}
\alias{*,matrix,ngTMatrix-method}
\alias{*,matrix,lgTMatrix-method}
\alias{+,RsparseMatrix,sparseMatrix-method}
\alias{+,ngRMatrix,sparseMatrix-method}
\alias{+,lgRMatrix,sparseMatrix-method}
\alias{+,sparseMatrix,RsparseMatrix-method}
\alias{+,sparseMatrix,ngRMatrix-method}
\alias{+,sparseMatrix,lgRMatrix-method}
\alias{-,RsparseMatrix,sparseMatrix-method}
\alias{-,ngRMatrix,sparseMatrix-method}
\alias{-,lgRMatrix,sparseMatrix-method}
\alias{-,sparseMatrix,RsparseMatrix-method}
\alias{-,sparseMatrix,ngRMatrix-method}
\alias{-,sparseMatrix,lgRMatrix-method}
\alias{*,RsparseMatrix,integer-method}
\alias{*,RsparseMatrix,numeric-method}
\alias{*,RsparseMatrix,logical-method}
\alias{*,integer,RsparseMatrix-method}
\alias{*,numeric,RsparseMatrix-method}
\alias{*,logical,RsparseMatrix-method}
\alias{/,RsparseMatrix,integer-method}
\alias{/,TsparseMatrix,integer-method}
\alias{/,RsparseMatrix,numeric-method}
\alias{/,TsparseMatrix,numeric-method}
\alias{/,RsparseMatrix,logical-method}
\alias{/,TsparseMatrix,logical-method}
\alias{\%/\%,RsparseMatrix,integer-method}
\alias{\%/\%,TsparseMatrix,integer-method}
\alias{\%/\%,RsparseMatrix,numeric-method}
\alias{\%/\%,TsparseMatrix,numeric-method}
\alias{\%/\%,RsparseMatrix,logical-method}
\alias{\%/\%,TsparseMatrix,logical-method}
\alias{\%\%,RsparseMatrix,integer-method}
\alias{\%\%,TsparseMatrix,integer-method}
\alias{\%\%,RsparseMatrix,numeric-method}
\alias{\%\%,TsparseMatrix,numeric-method}
\alias{\%\%,RsparseMatrix,logical-method}
\alias{\%\%,TsparseMatrix,logical-method}
\alias{^,RsparseMatrix,integer-method}
\alias{^,TsparseMatrix,integer-method}
\alias{^,RsparseMatrix,numeric-method}
\alias{^,TsparseMatrix,numeric-method}
\alias{^,RsparseMatrix,logical-method}
\alias{^,TsparseMatrix,logical-method}
\alias{&,RsparseMatrix,logical-method}
\alias{&,TsparseMatrix,logical-method}
\alias{|,RsparseMatrix,logical-method}
\alias{|,TsparseMatrix,logical-method}
\title{Mathematical operators on CSR and COO matrices}
\usage{
\S4method{*}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{*}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{*}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{*}{sparseMatrix,RsparseMatrix}(e1, e2)

\S4method{*}{sparseMatrix,ngRMatrix}(e1, e2)

\S4method{*}{sparseMatrix,lgRMatrix}(e1, e2)

\S4method{*}{CsparseMatrix,TsparseMatrix}(e1, e2)

\S4method{*}{TsparseMatrix,CsparseMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,matrix}(e1, e2)

\S4method{*}{ngRMatrix,matrix}(e1, e2)

\S4method{*}{lgRMatrix,matrix}(e1, e2)

\S4method{*}{matrix,RsparseMatrix}(e1, e2)

\S4method{*}{matrix,ngRMatrix}(e1, e2)

\S4method{*}{matrix,lgRMatrix}(e1, e2)

\S4method{*}{TsparseMatrix,matrix}(e1, e2)

\S4method{*}{TsparseMatrix,float32}(e1, e2)

\S4method{*}{ngTMatrix,matrix}(e1, e2)

\S4method{*}{lgTMatrix,matrix}(e1, e2)

\S4method{*}{matrix,TsparseMatrix}(e1, e2)

\S4method{*}{float32,TsparseMatrix}(e1, e2)

\S4method{*}{matrix,ngTMatrix}(e1, e2)

\S4method{*}{matrix,lgTMatrix}(e1, e2)

\S4method{+}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{+}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{+}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{+}{sparseMatrix,RsparseMatrix}(e1, e2)

\S4method{+}{sparseMatrix,ngRMatrix}(e1, e2)

\S4method{+}{sparseMatrix,lgRMatrix}(e1, e2)

\S4method{-}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{-}{ngRMatrix,sparseMatrix}(e1, e2)

\S4method{-}{lgRMatrix,sparseMatrix}(e1, e2)

\S4method{-}{sparseMatrix,RsparseMatrix}(e1, e2)

\S4method{-}{sparseMatrix,ngRMatrix}(e1, e2)

\S4method{-}{sparseMatrix,lgRMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,integer}(e1, e2)

\S4method{*}{RsparseMatrix,numeric}(e1, e2)

\S4method{*}{RsparseMatrix,logical}(e1, e2)

\S4method{*}{integer,RsparseMatrix}(e1, e2)

\S4method{*}{numeric,RsparseMatrix}(e1, e2)

\S4method{*}{logical,RsparseMatrix}(e1, e2)

\S4method{/}{RsparseMatrix,integer}(e1, e2)

\S4method{/}{TsparseMatrix,integer}(e1, e2)

\S4method{/}{RsparseMatrix,numeric}(e1, e2)

\S4method{/}{TsparseMatrix,numeric}(e1, e2)

\S4method{/}{RsparseMatrix,logical}(e1, e2)

\S4method{/}{TsparseMatrix,logical}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%/\%}{TsparseMatrix,integer}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%/\%}{TsparseMatrix,numeric}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,logical}(e1, e2)

\S4method{\%/\%}{TsparseMatrix,logical}(e1, e2)

\S4method{\%\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%\%}{TsparseMatrix,integer}(e1, e2)

\S4method{\%\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%\%}{TsparseMatrix,numeric}(e1, e2)

\S4method{\%\%}{RsparseMatrix,logical}(e1, e2)

\S4method{\%\%}{TsparseMatrix,logical}(e1, e2)

\S4method{^}{RsparseMatrix,integer}(e1, e2)

\S4method{^}{TsparseMatrix,integer}(e1, e2)

\S4method{^}{RsparseMatrix,numeric}(e1, e2)

\S4method{^}{TsparseMatrix,numeric}(e1, e2)

\S4method{^}{RsparseMatrix,logical}(e1, e2)

\S4method{^}{TsparseMatrix,logical}(e1, e2)

\S4method{&}{RsparseMatrix,logical}(e1, e2)

\S4method{&}{TsparseMatrix,logical}(e1, e2)

\S4method{|}{RsparseMatrix,logical}(e1, e2)

\S4method{|}{TsparseMatrix,logical}(e1, e2)
}
\arguments{
\item{e1}{A sparse matrix in CSR or COO format, or a scalar or vector, depeding on the operation.}

\item{e2}{Another sparse matrix in CSR or COO format, or a scalar or vector, depeding on the operation.}
}
\value{
A CSR or COO matrix depending on the input type and operation.
}
\description{
Implements some mathematical operators between CSR
(a.k.a. RsparseMatrix) / COO (a.k.a. TsparseMatrix) matrices such as addition and multiplication,
 and between CSR/COO matrices and numeric constants, such as division and multiplication.
}
\details{
The indices of the matrices might be sorted in-place for some operations
(see \link{sort_sparse_indices}).

\bold{Important:}: Multiplying NAs by zero here will be treated differently from base R,
as it will assume 0*NA = 0 (no entry in the matrix) vs. base R's 0*NA=NA. In order to get the
same behavior as in base R, the operations should be done in CSC format.
}
\examples{
library(Matrix)
library(MatrixExtra)
set.seed(1)
X <- as.csr.matrix(rsparsematrix(4, 3, .5))
X + X
X * 2
X ^ 2
}
