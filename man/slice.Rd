% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slice.R
\name{slice}
\alias{slice}
\alias{[,RsparseMatrix,index,index,logical-method}
\alias{[,RsparseMatrix,missing,index,logical-method}
\alias{[,RsparseMatrix,index,missing,logical-method}
\alias{[,RsparseMatrix,missing,missing,logical-method}
\alias{[,RsparseMatrix,nsparseVector,nsparseVector,logical-method}
\alias{[,RsparseMatrix,missing,nsparseVector,logical-method}
\alias{[,RsparseMatrix,nsparseVector,missing,logical-method}
\alias{[,RsparseMatrix,nsparseVector,nsparseVector,missing-method}
\alias{[,RsparseMatrix,missing,nsparseVector,missing-method}
\alias{[,RsparseMatrix,nsparseVector,missing,missing-method}
\alias{[,sparseMatrix,nsparseVector,nsparseVector,logical-method}
\alias{[,sparseMatrix,missing,nsparseVector,logical-method}
\alias{[,sparseMatrix,nsparseVector,missing,logical-method}
\alias{[,sparseMatrix,nsparseVector,nsparseVector,missing-method}
\alias{[,sparseMatrix,missing,nsparseVector,missing-method}
\alias{[,sparseMatrix,nsparseVector,missing,missing-method}
\alias{[,matrix,nsparseVector,nsparseVector,logical-method}
\alias{[,matrix,missing,nsparseVector,logical-method}
\alias{[,matrix,nsparseVector,missing,logical-method}
\alias{[,matrix,nsparseVector,nsparseVector,missing-method}
\alias{[,matrix,missing,nsparseVector,missing-method}
\alias{[,matrix,nsparseVector,missing,missing-method}
\title{CSR Matrices Slicing}
\usage{
\S4method{[}{RsparseMatrix,index,index,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,missing,index,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,index,missing,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,missing,missing,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,nsparseVector,nsparseVector,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,missing,nsparseVector,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,nsparseVector,missing,logical}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,nsparseVector,nsparseVector,missing}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,missing,nsparseVector,missing}(x, i, j, drop = TRUE)

\S4method{[}{RsparseMatrix,nsparseVector,missing,missing}(x, i, j, drop = TRUE)

\S4method{[}{sparseMatrix,nsparseVector,nsparseVector,logical}(x, i, j, drop)

\S4method{[}{sparseMatrix,missing,nsparseVector,logical}(x, i, j, drop)

\S4method{[}{sparseMatrix,nsparseVector,missing,logical}(x, i, j, drop)

\S4method{[}{sparseMatrix,nsparseVector,nsparseVector,missing}(x, i, j, drop)

\S4method{[}{sparseMatrix,missing,nsparseVector,missing}(x, i, j, drop)

\S4method{[}{sparseMatrix,nsparseVector,missing,missing}(x, i, j, drop)

\S4method{[}{matrix,nsparseVector,nsparseVector,logical}(x, i, j, drop)

\S4method{[}{matrix,missing,nsparseVector,logical}(x, i, j, drop)

\S4method{[}{matrix,nsparseVector,missing,logical}(x, i, j, drop)

\S4method{[}{matrix,nsparseVector,nsparseVector,missing}(x, i, j, drop)

\S4method{[}{matrix,missing,nsparseVector,missing}(x, i, j, drop)

\S4method{[}{matrix,nsparseVector,missing,missing}(x, i, j, drop)
}
\arguments{
\item{x}{input `RsparseMatrix`}

\item{i}{row indices to subset}

\item{j}{column indices to subset}

\item{drop}{whether to simplify 1d matrix to a (dense) vector}
}
\value{
An `RsparseMatrix`.
}
\description{
Natively slice CSR matrices without converting them to triplets/CSC.
}
\examples{
library(Matrix)
library(MatrixExtra)
# dgCMatrix - CSC
m <- rsparsematrix(20, 20, 0.1)
# make CSR
m <- as(m, "RsparseMatrix")
inherits(m[1:2, ], "RsparseMatrix")
inherits(m[1:2, 3:4], "RsparseMatrix")
}
